{% set title = 'Environment variables (.env)' %}

{% set introduction %}
    Environment variables in Tina4 are defined in the <code>.env</code> file in the base of the project.  These variables are instantiated as globals and <code>$_ENV</code> variables.
{% endset %}

{% set requirements = ['PHP', 'Globals', 'Standard .env conventions'] %}

{% set content %}
    <h5>Typical .env example</h5>
    <p>The following is an example of an <code>.env</code> file based on the auto-generated one which Tina4 creates when you do an initialize.
    <pre><code>{{ include_code("examples/environment-variables-example.twig"| raw) }}</code></pre>
    </p>
    <h5>Using the environment variables with code</h5>
    <p>Use the <code>$_ENV</code> global to reference any value in the <code>.env</code> file.
    <pre><code>{{ include_code("examples/environment-variables-example-use.twig"| raw) }}</code></pre>
    </p>
{% endset %}

{% set tips = [
    'The .env files is created with a couple of ready to use variables which Tina4 uses in runtime.',
    'Use <code>[brackets]</code> to make sections in the <code>.env</code> file and <code>#</code> on a line to comment it out.',
    '<code>TINA4_DEBUG</code> set to true (default) gives you very detailed commandline debugging.',
    'Set the ENVIRONMENT variable from command prompt using export or set to change which <code>.env</code> will be loaded.',
    'If the ENVIRONMENT variable is <code>dev</code>, the file it will try to load will be <code>.env.dev</code>.',
    'Don\'t commit your production <code>.env</code> files into your respository, rather make a <code>.env.example</code> with dummy values.'
]
%}

{% include "documentation/components/help-segment.twig" %}